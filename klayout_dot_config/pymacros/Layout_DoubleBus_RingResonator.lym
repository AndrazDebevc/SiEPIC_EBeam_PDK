<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Layout_DoubleBus_RingResonator</description>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text># Python script
# Layout_DoubleBus_RingResonator

"""
This file is part of the SiEPIC_EBeam_PDK
by Lukas Chrostowski (c) 2015

This Python file creates a layout for testing a double-bus ring resonator.

uses:
 - the SiEPIC EBeam GDS Library
 - the SiEPIC EBeam PCell Library
it does:
 - creates the layout in the presently selected cell
 - deletes everything first

Version history:

Lukas Chrostowski           2015/11/10
 - Initial version

Lukas Chrostowski           2015/11/15
 - fix for Python 3.4: print ("xxx")

"""

# 
# Python script to create a layout for testing a double-bus ring resonator.
# uses:
#  - the SiEPIC EBeam GDS Library
#  - the SiEPIC EBeam PCell Library
# creates the layout in the presently selected cell
# deletes everything first

import pya

# Configure variables to draw structures in the presently selected cell:
lv = pya.Application.instance().main_window().current_view()
if lv == None:
  raise Exception("No view selected")
# Find the currently selected layout.
ly = pya.Application.instance().main_window().current_view().active_cellview().layout() 
if ly == None:
  raise Exception("No layout")
# find the currently selected cell:
cell = pya.Application.instance().main_window().current_view().active_cellview().cell
if cell == None:
  raise Exception("No cell")
# fetch the database parameters
dbu = 1 / ly.dbu

# clean all cells within "cell"
ly.prune_subcells(cell.cell_index(), 10)
#delete_extra_top_cells(cell)

# Layer mapping:
LayerSi = pya.LayerInfo(1, 0)
LayerSiN = cell.layout().layer(LayerSi)
fpLayer = pya.LayerInfo(99, 0)
fpLayerN = cell.layout().layer(fpLayer)
TextLayer = pya.LayerInfo(10, 0)
TextLayerN = cell.layout().layer(TextLayer)

# Draw floor plan
cell.shapes(fpLayerN).insert(pya.Box(0,0, 610*dbu, 405*dbu))

# Create a sub-cell for our Ring resonator layout
top_cell = cell
cell = cell.layout().create_cell("RingResonator")
t = pya.Trans(pya.Trans.R0, 40 * dbu, 12 * dbu)
# place "cell" in the top cell
top_cell.insert(pya.CellInstArray(cell.cell_index(), t))


# Import cells from the SiEPIC GDS Library, and instantiate them

# Grating couplers, Ports 1, 2, 3, 4 (top-down):
GC_imported = ly.create_cell("ebeam_gc_te1550", "SiEPIC-EBeam").cell_index()
print ("Cell: GC_imported: #%s" % GC_imported)
t = pya.Trans(pya.Trans.R0, 0, 0)
cell.insert(pya.CellInstArray(GC_imported, t, pya.Point(0,127*dbu), pya.Point(0,0), 4, 1))

# Label for automated measurements, laser on Port 2, detectors on Ports 1, 3, 4
t = pya.Trans(0, 127*2*dbu)
text = pya.Text ("opt_in_TE_1550_device_DoubleBusRing", t)
shape = cell.shapes(TextLayerN).insert(text)
shape.text_size = 3*dbu

# Ring resonator PCell
r = 20
wg_width = 0.5
g = 0.2
pcell = ly.create_cell("DoubleBus_Ring", "SiEPIC", { "r": r, "w": wg_width, "g": g, "l": LayerSi  } )
print ("Cell: pcell: #%s" % pcell.cell_index())
y_ring = 127*3/2+r
t = pya.Trans(pya.Trans.R270, 10 * dbu, y_ring * dbu) 
instance = cell.insert(pya.CellInstArray(pcell.cell_index(), t))

# Create paths for waveguides
wg_bend_radius = 10

# GC3 to bottom-left of ring
points = [ [0, 127], [10,127], [10, y_ring-2*r-wg_width] ] 
layout_waveguide_abs(cell, LayerSi, points, wg_width, wg_bend_radius)

# GC4 to bottom-right of ring
points = [ [0, 0], [10+2*r+2*g+2*wg_width,0], [10+2*r+2*g+2*wg_width, y_ring-2*r-wg_width]  ] 
layout_waveguide_abs(cell, LayerSi, points, wg_width, 20)

# GC2 to top-right of ring
points = [ [10,y_ring], [10, 127*2], [0,127*2] ] 
layout_waveguide_abs(cell, LayerSi, points, wg_width, wg_bend_radius)

# GC1 to top-left of ring
points = [ [0, 127*3], [10+2*r+2*g+2*wg_width,127*3], [10+2*r+2*g+2*wg_width, y_ring] ] 
layout_waveguide_abs(cell, LayerSi, points, wg_width, 20)

print ("done layout...")
</text>
</klayout-macro>
